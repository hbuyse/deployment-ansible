---
- name: "Mako | Include OS specific variables"
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family | lower }}.yml"
      skip: true
  tags: mako

- name: "Mako | Install packages"
  become: true
  ansible.builtin.package:
    name: "{{ mako_packages }}"
    state: present
  tags: mako

- name: "Mako | Install configuration"
  tags: mako
  block:
    - name: "Mako | Ensure directory exist"
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.config/mako"
        state: directory
        mode: "0755"

    - name: "Mako | Copy configuration"
      ansible.builtin.copy:
        src: "config"
        dest: "{{ ansible_user_dir }}/.config/mako/config"
        mode: "0644"

- name: "Mako | Check if AppArmor profile exists"
  ansible.builtin.stat:
    path: "/etc/apparmor.d/fr.emersion.Mako"
  register: profile_result
  tags: mako

- name: "Mako | Disable AppArmor profile"
  become: true
  when: profile_result.stat.exists
  tags: mako
  block:
    - name: "Mako | Link AppArmor profile to 'disable' folder"
      ansible.builtin.file:
        src: "/etc/apparmor.d/fr.emersion.Mako"
        dest: "/etc/apparmor.d/disable/fr.emersion.Mako"
        state: "link"

    - name: "Mako | Restart AppArmor service"
      ansible.builtin.systemd:
        name: "apparmor"
        state: "restarted"

- name: "Mako | Install service file"
  tags: mako
  block:
    - name: "Mako | Ensure directory exist"
      become: true
      ansible.builtin.file:
        path: "/usr/local/lib/systemd/user/"
        state: directory
        mode: "0755"

    - name: "Mako | Copy service file"
      become: true
      ansible.builtin.copy:
        src: "mako.service"
        dest: "/usr/local/lib/systemd/user/mako.service"
        mode: "0644"
      tags: mako

    - name: "Mako | Disable 'dunst' service if exists"
      ansible.builtin.systemd:
        name: "dunst"
        enabled: false
        state: "stopped"
        scope: user
      when: "'dunst' in services"

    - name: "Mako | Enable service"
      ansible.builtin.systemd:
        name: "mako"
        daemon_reload: true
        enabled: true
        state: "started"
        scope: user
